apt = use_extension("@rules_deb//apt:extensions.bzl", "apt")

apt.sources_list(
    architectures = ["amd64"],
    components = ["main", "restricted", "universe"],
    suites = ["focal", "focal-security", "focal-updates"],
    uris = [
        "https://snapshot.ubuntu.com/ubuntu/20240301T030400Z",
        "mirror+https://snapshot.ubuntu.com/ubuntu/20240301T030400Z",
    ],
)


apt.install(
    dependency_set = "focal",
    target_release = "focal",
    packages = [
        "base-files",
        "bash",
        "curl",
        "less",
        "perl",
        "procps",
        "python3",
        "python3-distutils",
        "python3-pip",
        "python3-setuptools",
        "python3-wheel",
        "python-is-python3",
        "vim-tiny",
        "rsyslog",
        "redis-tools",
        "libdaemon0",
        "libdbus-1-3",
        "libjansson4",
        "iproute2",
        "net-tools",
        "jq",
        "libzmq5",
        "libwrap0",
        "libatomic1"
    ]
)

use_repo(apt, "focal")



http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "supervisord",
    urls = [
        "https://files.pythonhosted.org/packages/0e/65/5e726c372da8a5e35022a94388b12252710aad0c2351699c3d76ae8dba78/supervisor-4.3.0-py2.py3-none-any.whl"
    ],
    type = "zip",
    build_file_content = """
load("@tar.bzl", "tar", "mutate")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@rules_deb//distroless:defs.bzl", "flatten")

BIN='''\\
#!/usr/bin/python3
# -*- coding: utf-8 -*-
import re
import sys
from supervisor.supervisord import main
if __name__ == '__main__':
    sys.argv[0] = re.sub(r'(-script\\\\.pyw|\\\\.exe)?$', '', sys.argv[0])
    sys.exit(main())
'''

write_file(
    name = "bin_out",
    content = [BIN],
    out = "supervisord.bin",
    is_executable = True,
)

tar(
    name = "pkg",
    srcs = glob(["**/*"], exclude = ["*.bazel"]),
    mutate = mutate(
        package_dir = "./usr/lib/python3/dist-packages"
    )
)


tar(
    name = "bin",
    srcs = [":bin_out"],
    mtree = [
        "./usr/local/bin/supervisord type=file contents=$(location :bin_out)"
    ]
)

flatten(
    name = "supervisord",
    tars = [
        ":pkg",
        ":bin"
    ],
    visibility = ["//visibility:public"]
)

"""
)
